<?php

namespace DoctrineORMModule\Proxy\__CG__\Warehouse\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Recipe extends \Warehouse\Entity\Recipe implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'description', 'serves', 'preparationTime', 'totalTime', '' . "\0" . 'Warehouse\\Entity\\Recipe' . "\0" . 'ingredients', '' . "\0" . 'Warehouse\\Entity\\Recipe' . "\0" . 'instructions', '' . "\0" . 'Warehouse\\Entity\\Recipe' . "\0" . 'tags', 'note', 'category', 'recipeattachments'];
        }

        return ['__isInitialized__', 'id', 'description', 'serves', 'preparationTime', 'totalTime', '' . "\0" . 'Warehouse\\Entity\\Recipe' . "\0" . 'ingredients', '' . "\0" . 'Warehouse\\Entity\\Recipe' . "\0" . 'instructions', '' . "\0" . 'Warehouse\\Entity\\Recipe' . "\0" . 'tags', 'note', 'category', 'recipeattachments'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Recipe $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getServes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServes', []);

        return parent::getServes();
    }

    /**
     * {@inheritDoc}
     */
    public function setServes($serves)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServes', [$serves]);

        return parent::setServes($serves);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreparationTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreparationTime', []);

        return parent::getPreparationTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreparationTime($preparationTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreparationTime', [$preparationTime]);

        return parent::setPreparationTime($preparationTime);
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalTime($totalTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalTime', [$totalTime]);

        return parent::setTotalTime($totalTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalTime', []);

        return parent::getTotalTime();
    }

    /**
     * {@inheritDoc}
     */
    public function addIngredients(\Warehouse\Entity\Ingredient $ingredient)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIngredients', [$ingredient]);

        return parent::addIngredients($ingredient);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIngredients(\Warehouse\Entity\Ingredient $ingredient)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIngredients', [$ingredient]);

        return parent::removeIngredients($ingredient);
    }

    /**
     * {@inheritDoc}
     */
    public function getIngredients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIngredients', []);

        return parent::getIngredients();
    }

    /**
     * {@inheritDoc}
     */
    public function addInstructions(\Warehouse\Entity\Instruction $instruction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInstructions', [$instruction]);

        return parent::addInstructions($instruction);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInstructions(\Warehouse\Entity\Instruction $instruction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInstructions', [$instruction]);

        return parent::removeInstructions($instruction);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstructions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstructions', []);

        return parent::getInstructions();
    }

    /**
     * {@inheritDoc}
     */
    public function addTags($tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTags', [$tag]);

        return parent::addTags($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', []);

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function getNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', []);

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function setNote($note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNote', [$note]);

        return parent::setNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function addRecipeAttachment(\Warehouse\Entity\RecipeAttachment $recipeattachment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRecipeAttachment', [$recipeattachment]);

        return parent::addRecipeAttachment($recipeattachment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRecipeAttachment(\Warehouse\Entity\Attachment $recipeattachment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRecipeAttachment', [$recipeattachment]);

        return parent::removeRecipeAttachment($recipeattachment);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecipeAttachment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecipeAttachment', []);

        return parent::getRecipeAttachment();
    }

}
